{"mappings":"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","sources":["src/js/refs.js","src/js/add-to-list.js","src/js/script.js","src/js/fetch.js"],"sourcesContent":["const input = document.querySelector('.search-inp');\nconst searchBtn = document.querySelector('.search-btn');\nconst mainContainer = document.querySelector('.main-container');\nconst loadMoreBtn = document.querySelector('#load-more-btn');\nconst select = document.getElementById('anime-select');\nconst goBackBtn = document.getElementById('go-back-btn');\n\nconst options = {\n  position: 'center-center',\n  borderRadius: '5px',\n  cssAnimationStyle: 'from-bottom',\n  clickToClose: true,\n};\n\nexport {\n  input,\n  searchBtn,\n  mainContainer,\n  loadMoreBtn,\n  select,\n  goBackBtn,\n  options,\n  listContainer,\n};\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { options } from './refs.js';\nlet url;\n\nlet myList = JSON.parse(localStorage.getItem('myList')) || [];\nfunction addToList(e) {\n  e.preventDefault();\n  e.stopPropagation();\n  const addButton = e.target.closest('.add-button');\n  const animeCard = e.target.closest('.anime-card');\n\n  //Checking if clicked on the add btn\n  if (!addButton) {\n    return;\n  }\n\n  //Getting id of the chosen anime\n  const animeId = animeCard.dataset.animeId;\n\n  const isAdded = myList.some(anime => String(anime.mal_id) === animeId);\n  console.log(myList);\n\n  if (!isAdded) {\n    url = `https://api.jikan.moe/v4/anime/${animeId}`;\n    fetch(url)\n      .then(response => response.json())\n      .then(result => {\n        let animeData = result.data;\n\n        myList.push(animeData);\n\n        localStorage.setItem('myList', JSON.stringify(myList));\n\n        Notify.info('Added!', {\n          position: 'center-top',\n          borderRadius: '5px',\n          cssAnimationStyle: 'from-bottom',\n          clickToClose: true,\n        });\n      });\n  } else {\n    Notify.info('You already added this anime to your list', {\n      position: 'center-top',\n      borderRadius: '5px',\n      cssAnimationStyle: 'from-bottom',\n      clickToClose: true,\n    });\n  }\n}\n\nexport { addToList };\n","//imports\nimport {\n  input,\n  searchBtn,\n  mainContainer,\n  loadMoreBtn,\n  select,\n  goBackBtn,\n  options,\n  listContainer,\n} from './refs.js';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { openBigCard } from './big-card-shower';\nimport { fetchGenres } from './fetch.js';\nimport { addToList } from './add-to-list.js';\n\n//DECLARATIONS\nlet genreValue, inputValue, timerID;\nlet page = 1;\nlet PER_PAGE = 24;\nconst BASE_URL = 'https://api.jikan.moe/v4';\nconst GENRE_URL = 'https://api.jikan.moe/v4/genres/anime';\nlet searchType = 'anime';\nconst params = new URLSearchParams({\n  limit: PER_PAGE,\n  page: page,\n});\n\nlet url = `${BASE_URL}/anime?${params}`;\n\n//Shows all the cards on the page as default view\nanimeFetcher(drawSmallCard, url);\n\n//Fetching anime data and then creating cards(link to api, func to create cards)\nfunction animeFetcher(func, link) {\n  fetch(link)\n    .then(response => response.json())\n    .then(result => {\n      createCards(result.data, func);\n    })\n    .catch(error => Notify.info('Error:', error));\n}\n\n//Getting info (animeData) and iterating it to create cards(foo)\nfunction createCards(animeData, foo) {\n  if (animeData.length === 0) {\n    mainContainer.innerHTML = `<h2 class=\"nothing-heading\">Nothing was found</h2>`;\n    loadMoreBtn.classList.replace('load-more-btn', 'not-visible');\n    Notify.failure('Try better loser', options);\n  } else {\n    animeData.forEach(anime => {\n      foo(anime);\n    });\n    if (animeData.length >= PER_PAGE) {\n      loadMoreBtn.classList.replace('not-visible', 'load-more-btn');\n    } else {\n      loadMoreBtn.classList.replace('load-more-btn', 'not-visible');\n    }\n  }\n}\n\n//Creating small cards\nfunction drawSmallCard(anime) {\n  let { title, title_english, images, mal_id } = anime;\n  const smallImageUrl = images.jpg.large_image_url;\n\n  let realTitle = title_english === null ? title : title_english;\n\n  let smallAnimeCard = `\n  <div class=\"anime-card\" data-anime-id=\"${mal_id}\">\n   <img class=\"anime-image-small\" src=\"${smallImageUrl}\" alt=\"${title}\" />\n   <h3 class=\"anime-small-heading\">${realTitle}</h3> \n   <button class=\"add-button\">+</button>\n  </div>\n  `;\n\n  mainContainer.insertAdjacentHTML('beforeend', smallAnimeCard);\n}\n\n//Loading more cards button listener\nloadMoreBtn.addEventListener('click', e => {\n  e.preventDefault();\n  page += 1;\n  params.set('page', page);\n  let currentUrl;\n  if (searchType === 'anime') {\n    currentUrl = `${BASE_URL}/anime?${params}`;\n  } else if (searchType === 'genre') {\n    currentUrl = `${BASE_URL}/anime?genres=${genreValue}&${params}`;\n  } else if (searchType === 'name') {\n    currentUrl = `https://api.jikan.moe/v4/anime?${params}&q=${inputValue}`;\n  }\n  console.log(currentUrl);\n  animeFetcher(drawSmallCard, currentUrl);\n});\n\n// Fetching genres into select options\nfetchGenres(GENRE_URL);\n\n//Searching by chosen genre\nselect.addEventListener('change', async e => {\n  genreValue = +e.currentTarget.value;\n  url = `${BASE_URL}/anime?genres=${genreValue}&${params}`;\n  searchType = 'genre';\n  mainContainer.innerHTML = '';\n  animeFetcher(drawSmallCard, url);\n  goBackBtn.classList.replace('not-visible', 'go-back-btn');\n});\n\n//\n//Search by name\nsearchBtn.addEventListener('click', e => {\n  e.preventDefault();\n  searchType = 'name';\n  clearTimeout(timerID);\n  timerID = setTimeout(function () {\n    inputValue = input.value.trim();\n    url = `https://api.jikan.moe/v4/anime?${params}&q=${inputValue}`;\n    if (inputValue !== '') {\n      page = 1;\n      mainContainer.innerHTML = '';\n      animeFetcher(drawSmallCard, url);\n      goBackBtn.classList.replace('not-visible', 'go-back-btn');\n    }\n  }, 1000);\n});\n//\n//\n\ngoBackBtn.addEventListener('click', e => {\n  e.preventDefault();\n  url = `${BASE_URL}/anime?${params}`;\n\n  select.value = document.querySelector('.anime-select-option').value;\n  input.value = '';\n\n  mainContainer.innerHTML = '';\n  animeFetcher(drawSmallCard, url);\n  goBackBtn.classList.replace('go-back-btn', 'not-visible');\n});\n//\n//\nmainContainer.addEventListener('click', openBigCard);\nmainContainer.addEventListener('click', addToList);\n//\n//\n//\n//\n//\n//\nmainContainer.addEventListener('click', addToList);\n","import { select } from './refs.js';\n\nexport function fetchGenres(link) {\n  fetch(link)\n    .then(response => response.json())\n    .then(result => {\n      let data = result.data;\n\n      const genre = data.map(item => {\n        return `<option value='${item.mal_id}'>${item.name}</option>`;\n      });\n\n      select.insertAdjacentHTML('afterbegin', genre);\n    })\n    .catch(error => console.log('Error:', error));\n}\n"],"names":["$ee27a4d7c64fc8c4$export$b7e3ae3d7c15e42e","document","querySelector","$ee27a4d7c64fc8c4$export$c90e3f2a074946aa","$ee27a4d7c64fc8c4$export$eccb60d5692f3f7d","$ee27a4d7c64fc8c4$export$740aa5c6a07ccd9c","$ee27a4d7c64fc8c4$export$2e6c959c16ff56b8","getElementById","$ee27a4d7c64fc8c4$export$c9b83445028854f3","$ee27a4d7c64fc8c4$export$41c562ebe57d11e2","position","borderRadius","cssAnimationStyle","clickToClose","$iQIUW","parcelRequire","$101bd3e1b7ba899a$var$url","$1ee2b6306238ec66$var$genreValue","$1ee2b6306238ec66$var$inputValue","$1ee2b6306238ec66$var$timerID","$101bd3e1b7ba899a$var$myList","JSON","parse","localStorage","getItem","$101bd3e1b7ba899a$export$fd66124281ea8c87","e","preventDefault","stopPropagation","addButton","target","closest","animeCard","animeId","dataset","isAdded","some","anime","String","mal_id","console","log","Notify","info","fetch","then","response","json","result","animeData","data","push","setItem","stringify","$1ee2b6306238ec66$var$page","$1ee2b6306238ec66$var$searchType","$1ee2b6306238ec66$var$params","URLSearchParams","limit","page","$1ee2b6306238ec66$var$url","$1ee2b6306238ec66$var$animeFetcher","func","link","foo","length","innerHTML","classList","replace","failure","forEach","catch","error","$1ee2b6306238ec66$var$drawSmallCard","title","title_english","images","smallAnimeCard","jpg","large_image_url","insertAdjacentHTML","addEventListener","currentUrl","set","genre","map","item","name","async","currentTarget","value","clearTimeout","setTimeout","trim","$gGywM","openBigCard"],"version":3,"file":"index.89a2dced.js.map"}